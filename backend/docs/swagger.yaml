basePath: /api
definitions:
  api.CreateUserRequest:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: secret123
        minLength: 6
        type: string
      username:
        example: johndoe
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.LoginRequest:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: secret123
        type: string
    required:
    - email
    - password
    type: object
  api.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  api.UserResponse:
    properties:
      email:
        example: john@example.com
        type: string
      id:
        example: 1
        type: integer
      username:
        example: johndoe
        type: string
    type: object
  api.WSParticipantsResponse:
    properties:
      count:
        type: integer
    type: object
  models.Call:
    properties:
      created_at:
        type: string
      creator_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.CallCreate:
    properties:
      creator_id:
        type: integer
      description:
        example: Weekly team sync meeting
        type: string
      title:
        example: Team Meeting
        type: string
    required:
    - creator_id
    - title
    type: object
  models.CallJoin:
    properties:
      call_id:
        example: 1
        type: integer
      user_id:
        example: 2
        type: integer
    required:
    - call_id
    - user_id
    type: object
  models.CallParticipant:
    properties:
      call_id:
        type: integer
      id:
        type: integer
      joined_at:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A video call application with accountability features.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Accountability App API
  version: "1.0"
paths:
  /calls:
    get:
      consumes:
      - application/json
      description: Get a list of all active video call sessions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Call'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - Bearer: []
      summary: List all active calls
      tags:
      - calls
    post:
      consumes:
      - application/json
      description: Create a new video call session
      parameters:
      - description: Call details
        in: body
        name: call
        required: true
        schema:
          $ref: '#/definitions/models.CallCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Call'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new call
      tags:
      - calls
  /calls/{room_id}/leave:
    post:
      consumes:
      - application/json
      description: Leave a video call session
      parameters:
      - description: Room ID
        in: path
        name: room_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - Bearer: []
      summary: Leave a call
      tags:
      - calls
  /calls/join:
    post:
      consumes:
      - application/json
      description: Join an active video call session
      parameters:
      - description: Join call details
        in: body
        name: join
        required: true
        schema:
          $ref: '#/definitions/models.CallJoin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CallParticipant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - Bearer: []
      summary: Join an existing call
      tags:
      - calls
  /rooms/{room_id}/participants:
    get:
      consumes:
      - application/json
      description: Get the number of participants in a specific room
      parameters:
      - description: Room ID
        in: path
        name: room_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.WSParticipantsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - Bearer: []
      summary: Get room participants
      tags:
      - websocket
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user information by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - Bearer: []
      summary: Get user details
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Login user
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, username, and password
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Register a new user
      tags:
      - users
  /ws:
    get:
      consumes:
      - application/json
      description: Establish a WebSocket connection for real-time communication
      parameters:
      - description: Room ID
        in: query
        name: room_id
        required: true
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols to websocket
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - Bearer: []
      summary: Connect to WebSocket
      tags:
      - websocket
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
